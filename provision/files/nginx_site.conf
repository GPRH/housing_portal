
  # letsencrypt cert renewal
  server {
    listen 80;
    server_name {{ domain_name }};

    location / {
        return 301 https://$server_name$request_uri;
    }

    location /.well-known/acme-challenge {
        root /var/www/{{ domain_name }};
        try_files $uri $uri/ =404;
    }
  }

  server {
    listen 443 ssl;
    server_name {{ domain_name }};
    charset utf-8;

    access_log /var/log/nginx/{{ domain_name }}_access.log;
    error_log  /var/log/nginx/{{ domain_name }}_error.log;

    root {{ application_path }}/frontend/dist/;
    index index.html;

    client_max_body_size 20M;
    add_header Strict-Transport-Security "max-age=31536000";
    add_header X-Frame-Options DENY;

    ssl on;
    ssl_certificate         /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;

    ssl_session_timeout 5m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    ssl_prefer_server_ciphers off;

    sendfile on;

    gzip on;
    gzip_http_version 1.1;
    gzip_disable msie6;
    gzip_vary on;

    gzip_comp_level 4;
    gzip_proxied any;
    gzip_types application/vnd.mapbox-vector-tile application/javascript application/json text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/jpeg;


    # frontend
    location / {
      add_header Cache-Control "no-store";
      expires 0;
      try_files $uri $uri/ @rewrites;
    }

    location @rewrites {
      rewrite ^(.+)$ /index.html last;
    }

    # gprh_backend urls
    location ~ ^/(admin|api) {
      proxy_redirect http:// https://;
      proxy_pass http://localhost:{{ backend_port }};
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_http_version 1.1;
      proxy_read_timeout 120;
      add_header Cache-Control "no-cache, private, must-revalidate";
    }

    # gprh_backend static
    location ~ /staticfiles {
      root {{ application_path }}/backend;
    }

    location ^~ /dev-docs/ {
      alias {{ application_path }}/docs/dev/_build/html/;
      add_header Cache-Control "private, no-cache";
    }

    location ^~ /user-docs/ {
      alias {{ application_path }}/docs/user/_build/html/;
      add_header Cache-Control "private, no-cache";
    }

    location ^~ /drone-viewer/ {
      default_type "text/html";
      alias {{ application_path }}/drone/;
      add_header Cache-Control "private, no-cache";
    }

    # Some basic cache-control for static files to be sent to the browser
    location ~* \.(?:ico|css|js|gif|jpe?g|png|svg)$ {
      add_header Cache-Control "private, must-revalidate, max-age=604800";
    }

    location ^~ /protected/exports/ {
      internal;
      alias {{ nginx_exports_root }};
      add_header Cache-Control "no-store";
    }

    location ^~ /protected/images/ {
      internal;
      alias {{ nginx_images_root }};
      add_header Cache-Control "private, must-revalidate, max-age=604800";
    }

    location ^~ /protected/drone/ {
      internal;
      alias {{ nginx_drone_root }};
      add_header Cache-Control "private, must-revalidate, max-age=604800";
    }

  }
