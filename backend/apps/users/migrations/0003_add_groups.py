# Generated by Django 2.1.1 on 2019-09-27 16:50

from django.db import migrations
from django.conf import settings
from django.contrib.auth.management import create_permissions


def add_groups(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    # user_ct = ContentType.objects.get_for_model(User)

    country = settings.PORTAL_INSTANCE
    gov_group_name = u'{0}GovernmentUserGroup'.format(country)
    admin_group_name = u'{0}AdminUserGroup'.format(country)
    gov_group = Group.objects.create(name=gov_group_name)
    admin_group = Group.objects.create(name=admin_group_name)
    for city in settings.PORTAL_CITIES:
        name = '{0}UserGroup'.format(city)
        g = Group.objects.create(name=name)
        codename = 'view_{0}'.format(city).lower()
        perm = Permission.objects.get(codename=codename)
        g.permissions.add(perm)
        gov_group.permissions.add(perm)
        admin_group.permissions.add(perm)

    # add user permissions to portal admin group
    # need to force creation of user permissions first
    # as by default django creates default model permissions
    # only when all migrations have run.
    app_config = apps.get_app_config('users')
    if app_config.models_module is None:
        app_config.models_module = True
        create_permissions(app_config, verbosity=0)
        app_config.models_module = None
    else:
        raise
    perms = Permission.objects.filter(content_type__app_label='users')
    for perm in perms:
        admin_group.permissions.add(perm)


def revert_groups(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    country = settings.PORTAL_INSTANCE
    gov_group_name = u'{0}GovernmentUserGroup'.format(country)
    admin_group_name = u'{0}AdminUserGroup'.format(country)
    Group.objects.filter(name__in=[gov_group_name, admin_group_name]).delete()
    for city in settings.PORTAL_CITIES:
        name = '{0}UserGroup'.format(city)
        Group.objects.filter(name=name).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0001_initial'),
        ('users', '0002_add_permissions'),
    ]

    operations = [
        migrations.RunPython(add_groups, revert_groups)
    ]
