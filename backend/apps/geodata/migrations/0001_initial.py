# Generated by Django 2.1.1 on 2019-07-19 08:59

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AOI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('country', models.CharField(help_text='Name of the country', max_length=255)),
                ('city', models.CharField(help_text='Name of the city', max_length=255)),
                ('name', models.CharField(help_text='Name of the AOI', max_length=255)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('fid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(verbose_name='Imported id')),
                ('d_material', models.CharField(blank=True, help_text='Condition of roof material', max_length=255, null=True)),
                ('d_multilevel', models.CharField(blank=True, help_text='Has multilevel roof?', max_length=255, null=True)),
                ('d_condition', models.CharField(blank=True, help_text='Has multilevel roof?', max_length=255, null=True)),
                ('d_avg_height', models.FloatField(blank=True, help_text='Average roof height in meters.', null=True)),
                ('d_avg_height_i', models.IntegerField(blank=True, help_text='Average roof height in meters rounded.', null=True)),
                ('d_slope', models.FloatField(blank=True, help_text='Average slope of terrain in meters', null=True)),
                ('d_volume', models.FloatField(blank=True, help_text='Volume in cubic meters.', null=True)),
                ('d_area', models.FloatField(blank=True, help_text='Area in square meters.', null=True)),
                ('sv_design', models.CharField(blank=True, help_text='Is bulding designed?', max_length=255, null=True)),
                ('sv_materia', models.CharField(blank=True, help_text='Wall material.', max_length=255, null=True)),
                ('sv_use', models.CharField(blank=True, help_text='Building use.', max_length=255, null=True)),
                ('sv_securit', models.CharField(blank=True, help_text='Extra security.', max_length=255, null=True)),
                ('sv_condit', models.CharField(blank=True, help_text='General condition.', max_length=255, null=True)),
                ('sv_constru', models.CharField(blank=True, help_text='Predominant construction type.', max_length=255, null=True)),
                ('sv_vintage', models.IntegerField(blank=True, help_text='Vintage of construction.', null=True)),
                ('sv_window', models.IntegerField(blank=True, help_text='Number of windows.', null=True)),
                ('sv_door', models.IntegerField(blank=True, help_text='Number of doors.', null=True)),
                ('sv_garage', models.IntegerField(blank=True, help_text='Number of garages.', null=True)),
                ('sv_disaster', models.CharField(blank=True, help_text='Has disaster mitigation measuer?', max_length=255, null=True)),
                ('zone', models.CharField(blank=True, help_text='The full AOI of the drone.', max_length=255, null=True)),
                ('subzone', models.CharField(blank=True, help_text='The sector within the AOI.', max_length=255, null=True)),
                ('address', models.CharField(blank=True, help_text='The mailing address.', max_length=255, null=True)),
                ('park', models.CharField(blank=True, help_text='Within 200m of a park?', max_length=255, null=True)),
                ('infrastruc', models.CharField(blank=True, help_text='The sector within the AOI.', max_length=255, null=True)),
                ('hz_earthqu', models.IntegerField(blank=True, help_text='Earthquake risk.', null=True)),
                ('hz_landslide', models.IntegerField(blank=True, help_text='Landslide risk.', null=True)),
                ('hz_flood', models.IntegerField(blank=True, help_text='Flood risk.', null=True)),
                ('hz_wind', models.IntegerField(blank=True, help_text='Wind risk.', null=True)),
                ('land_publi', models.IntegerField(blank=True, help_text='Is public land?', null=True)),
                ('land_servi', models.IntegerField(blank=True, help_text='Can be serviced?', null=True)),
                ('tot_qualit', models.CharField(blank=True, help_text='Total quality', max_length=255, null=True)),
                ('soft_story', models.CharField(blank=True, help_text='Is the building a soft story?', max_length=255, null=True)),
                ('value', models.CharField(blank=True, help_text='Is the building a soft story?', max_length=255, null=True)),
                ('dem_reset', models.CharField(blank=True, help_text='Demand for resettlement?', max_length=255, null=True)),
                ('dem_struct', models.CharField(blank=True, help_text='Demand for strucural improvement only?', max_length=255, null=True)),
                ('dem_qualit', models.CharField(blank=True, help_text='Demand for quality improvement only?', max_length=255, null=True)),
                ('dem_both', models.CharField(blank=True, help_text='Demand for structural and quality improvements?', max_length=255, null=True)),
                ('opp_expansion', models.CharField(blank=True, help_text='Opportunity for expansion?', max_length=255, null=True)),
                ('cap_payment', models.CharField(blank=True, help_text='Capacity of payment', max_length=255, null=True)),
                ('dem_insur', models.CharField(blank=True, help_text='Demand for home insurance premiums?', max_length=255, null=True)),
                ('dem_micro', models.CharField(blank=True, help_text='Demand for home improvement microloans?', max_length=255, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(help_text='Building rooftop geometry.', srid=4326)),
                ('aoi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buildings', to='geodata.AOI')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(help_text='Name of the Sector', max_length=255)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='geodata.AOI')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='building',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buildings', to='geodata.Sector'),
        ),
    ]
